{"ast":null,"code":"import '@/assets/css/chartCategory.css';\nimport axios from 'axios';\nexport default {\n  name: \"CoffeeView\",\n  components: {},\n  data() {\n    return {\n      // 초기값으로 현재 날짜를 설정\n      selectedDate: new Date().toISOString().substring(0, 10),\n      cartList: [],\n      totalCount: \"\",\n      category: \"커피\"\n    };\n  },\n  methods: {\n    menuClcik(categoryName, event) {\n      // console.log(categoryName);\n      this.category = categoryName;\n\n      // 모든 li 요소의 하위 a 요소를 선택합니다.\n      const links = document.querySelectorAll(\".titleGroup li a\");\n      console.log(links);\n      // console.log(this.category);\n      // 각 요소에 대해 반복하여 초기화 설정\n      links.forEach(link => {\n        link.style.backgroundColor = \"white\";\n        link.style.color = \"black\";\n        link.style.height = \"22px\";\n      });\n\n      // 클릭한 요소의 변경\n      event.target.style.backgroundColor = \"#5e2d1a\";\n      event.target.style.color = \"white\";\n      event.target.style.fontWeight = \"bold\";\n      event.target.style.borderRadius = \"5px\";\n      event.target.style.paddingLeft = \"15px\";\n      event.target.style.paddingRight = \"15px\";\n      event.target.style.paddingTop = \"5px\";\n      event.target.style.paddingBottom = \"5px\";\n      this.dateChange();\n    },\n    dateChange() {\n      //console.log(this.selectedDate);\n      console.log(\"데이터 가져오기\");\n      //console.log(this.category);\n\n      let attentionVo = {\n        selectedDate: this.selectedDate,\n        category: this.category\n      };\n      console.log(attentionVo);\n      axios({\n        method: 'post',\n        //put,post,delete\n        url: 'http://localhost:9000/attention/manager/chart/coffee',\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        //전송타입\n        // params: { selectedDate: this.selectedDate}, //get방식 파라미터로 값이 전달\n        data: attentionVo,\n        //put, post, delete 방식 자동으로 JSON으로 변환 전달\n\n        responseType: 'json' //수신타입\n      }).then(response => {\n        console.log(response.data); //수신데이타\n        console.log(response.data.apiData); //수신데이타\n        this.cartList = response.data.apiData;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    numberWithCommas(x) {\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n  },\n  computed: {\n    totalPricesSum() {\n      return this.cartList.reduce((acc, item) => acc + item.totalPrice, 0);\n    }\n  },\n  created() {\n    this.dateChange();\n  }\n};","map":{"version":3,"names":["axios","name","components","data","selectedDate","Date","toISOString","substring","cartList","totalCount","category","methods","menuClcik","categoryName","event","links","document","querySelectorAll","console","log","forEach","link","style","backgroundColor","color","height","target","fontWeight","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","dateChange","attentionVo","method","url","headers","responseType","then","response","apiData","catch","error","numberWithCommas","x","toString","replace","computed","totalPricesSum","reduce","acc","item","totalPrice","created"],"sources":["C:\\javastudy\\kiosk\\vue-pos\\src\\views\\chart\\CoffeeView.vue"],"sourcesContent":["<template>\r\n    <div class=\"wrap\">\r\n        <header class=\"coffeeHeader\">\r\n            <router-link to=\"/setting\" class=\"home\"><img src=\"@/assets/images/home_icon.png\">\r\n            </router-link>\r\n            <router-link to=\"/setting\" class=\"logoImg\"><img src=\"@/assets/images/attention.png\"></router-link>\r\n            <ul>\r\n                <li><router-link to=\"/manager\">메뉴등록</router-link></li>\r\n                <li><router-link to=\"/chart/main\">총매출</router-link></li>\r\n                <li><router-link to=\"/chart/coffeeview\">카테고리매출</router-link></li>\r\n            </ul>\r\n        </header>\r\n\r\n        <div>\r\n            <div class=\"categoryGroup02\">\r\n                <div class=\"titleGroup\">\r\n\r\n                    <label>\r\n                        <router-link to=\"/chart/main\"> 매출현황</router-link>\r\n                    </label>\r\n                    <div>\r\n                        <ul>\r\n                            <li v-on:click=\"menuClcik('커피', $event)\"><router-link\r\n                                    to=\"/chart/coffeeview\">커피</router-link>\r\n                            </li>\r\n                            <li v-on:click=\"menuClcik('논커피', $event)\"><router-link to=\"\">논커피</router-link>\r\n                            </li>\r\n                            <li v-on:click=\"menuClcik('쉐이크', $event)\"><router-link to=\"\">밀크쉐이크</router-link>\r\n                            </li>\r\n                            <li v-on:click=\"menuClcik('스무디/프라페', $event)\"><router-link to=\"\">스무디/프라페</router-link></li>\r\n                            <li v-on:click=\"menuClcik('디저트', $event)\"><router-link to=\"\">디저트</router-link>\r\n                            </li>\r\n                        </ul>\r\n                        <input type=\"date\" v-model=\"selectedDate\" v-on:change=\"dateChange\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"chartListGorup\">\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>제품명</th>\r\n                                <th>총 수량</th>\r\n                                <th>총 금액</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            <tr v-bind:key=\"i\" v-for=\"(AttentionCartVo, i) in cartList\">\r\n                                <td>{{ i + 1 }}</td>\r\n                                <td>{{ AttentionCartVo.productName }}</td>\r\n                                <td>{{ AttentionCartVo.totalCount }}</td>\r\n                                <td>{{ numberWithCommas(AttentionCartVo.totalPrice) }}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td colspan=\"2\"> 총 금액</td>\r\n                                <td colspan=\"2\">{{ numberWithCommas(totalPricesSum) }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n            </div> <!-- categoryGroup -->\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport '@/assets/css/chartCategory.css';\r\nimport axios from 'axios';\r\nexport default {\r\n    name: \"CoffeeView\",\r\n    components: {\r\n    },\r\n    data() {\r\n        return {\r\n            // 초기값으로 현재 날짜를 설정\r\n            selectedDate: new Date().toISOString().substring(0, 10),\r\n            cartList: [],\r\n            totalCount: \"\",\r\n            category: \"커피\"\r\n\r\n        };\r\n    },\r\n    methods: {\r\n        menuClcik(categoryName, event) {\r\n            // console.log(categoryName);\r\n            this.category = categoryName;\r\n\r\n            // 모든 li 요소의 하위 a 요소를 선택합니다.\r\n            const links = document.querySelectorAll(\".titleGroup li a\");\r\n            console.log(links);\r\n            // console.log(this.category);\r\n            // 각 요소에 대해 반복하여 초기화 설정\r\n            links.forEach(link => {\r\n                link.style.backgroundColor = \"white\";\r\n                link.style.color = \"black\";\r\n                link.style.height = \"22px\";\r\n            });\r\n\r\n            // 클릭한 요소의 변경\r\n            event.target.style.backgroundColor = \"#5e2d1a\";\r\n            event.target.style.color = \"white\";\r\n            event.target.style.fontWeight = \"bold\";\r\n            event.target.style.borderRadius = \"5px\";\r\n            event.target.style.paddingLeft=\"15px\";\r\n            event.target.style.paddingRight=\"15px\";\r\n            event.target.style.paddingTop=\"5px\";\r\n            event.target.style.paddingBottom=\"5px\";\r\n           \r\n            this.dateChange();\r\n\r\n        },\r\n\r\n\r\n        dateChange() {\r\n            //console.log(this.selectedDate);\r\n            console.log(\"데이터 가져오기\");\r\n            //console.log(this.category);\r\n\r\n            let attentionVo = {\r\n                selectedDate: this.selectedDate, \r\n                category: this.category\r\n            }\r\n            console.log(attentionVo);\r\n            axios({\r\n                method: 'post',  //put,post,delete\r\n                url: 'http://localhost:9000/attention/manager/chart/coffee',\r\n                headers: { \"Content-Type\": \"application/json; charset=utf-8\" }, //전송타입\r\n                // params: { selectedDate: this.selectedDate}, //get방식 파라미터로 값이 전달\r\n                data: attentionVo, //put, post, delete 방식 자동으로 JSON으로 변환 전달\r\n\r\n                responseType: 'json' //수신타입\r\n            }).then(response => {\r\n                console.log(response.data); //수신데이타\r\n                console.log(response.data.apiData); //수신데이타\r\n                this.cartList = response.data.apiData;\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n        },\r\n        numberWithCommas(x) {\r\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        }\r\n    },\r\n    computed: {\r\n        totalPricesSum() {\r\n            return this.cartList.reduce((acc, item) => acc + item.totalPrice, 0);\r\n        }\r\n\r\n    }, created() {\r\n        this.dateChange();\r\n    }\r\n};\r\n</script>\r\n\r\n\r\n<style></style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}